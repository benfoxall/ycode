import './common/error-8f9bf959.js';
import './common/function-d4886006.js';
export { A as AbstractConnector, f as AbstractStruct, g as AbstractType, Y as Array, C as ContentAny, h as ContentBinary, i as ContentDeleted, j as ContentEmbed, k as ContentFormat, l as ContentJSON, m as ContentString, n as ContentType, D as Doc, o as GC, I as ID, p as Item, q as Map, P as PermanentUserData, R as RelativePosition, S as Snapshot, s as Text, T as Transaction, t as UndoManager, v as XmlElement, w as XmlFragment, x as XmlHook, y as XmlText, z as YArrayEvent, E as YEvent, F as YMapEvent, H as YTextEvent, J as YXmlEvent, b as applyUpdate, K as applyUpdateV2, L as compareIDs, M as compareRelativePositions, N as createAbsolutePositionFromRelativePosition, O as createDeleteSet, Q as createDeleteSetFromStructStore, V as createDocFromSnapshot, W as createID, X as createRelativePositionFromJSON, Z as createRelativePositionFromTypeIndex, _ as createSnapshot, $ as decodeSnapshot, a0 as decodeSnapshotV2, a1 as decodeStateVector, a2 as decodeStateVectorV2, a3 as emptySnapshot, a4 as encodeSnapshot, a5 as encodeSnapshotV2, a as encodeStateAsUpdate, a6 as encodeStateAsUpdateV2, e as encodeStateVector, a7 as encodeStateVectorV2, a8 as equalSnapshots, a9 as findRootTypeKey, aa as getState, ab as getTypeChildren, ac as isDeleted, ad as isParentOf, ae as iterateDeletedStructs, af as logType, ag as readRelativePosition, ah as readUpdate, ai as readUpdateV2, aj as snapshot, ak as transact, al as tryGc, am as typeListToArraySnapshot, an as typeMapGetSnapshot, ao as writeRelativePosition } from './common/yjs-d596c0e9.js';
